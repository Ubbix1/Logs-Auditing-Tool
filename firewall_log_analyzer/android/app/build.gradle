plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    compileSdkVersion 34 // Updated to 34
    buildToolsVersion "34.0.0"

    defaultConfig {
        applicationId "com.example.firewall_log_analyzer"
        minSdkVersion flutter.minSdkVersion.toInteger()
        targetSdkVersion 34 // Updated to 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'my-key-alias'
            keyPassword 'mohammed'
            storeFile file('/home/user/my-release-key.jks')
            storePassword 'mohammed'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    namespace 'com.example.firewall_log_analyzer' // Specify namespace
}

flutter {
    source = "../.."
}
